@page "/InterneMedewerkerDossierInzien/{DossierCode}"
@rendermode InteractiveServer
@using Models
@using Ipsen5_groep01_frontend.Components.Services
@inject Ipsen5_groep01_frontend.Components.Services.DossiersService DossiersService

@inject NavigationManager NavigationManager

@using Services
@inject LoginService LoginService

<div class="container">
  <div class="button-container">
    <button class="navigate-button" @onclick="()=>navigate()">Terug</button>
  </div>    
  <div class="blocks">
    <p class="dossier-name">@DossierCode</p>
    <div class="bolletjes">
      <div class="basis bolletje-container " @onclick="() => SwitchToPage(1)">
        <div class="bolletje">
          1
        </div>
        <p>Basis</p>
        @if(page == 1){
          <div class="line"></div>
        }
                        
      </div>
      <div class="overig bolletje-container" @onclick="() => SwitchToPage(2)">
        <div class="bolletje">
          2
        </div>
        <p>Overig</p>
        @if(page == 2){
          <p class="line"></p>
        }
                        
      </div>
    </div>
    @if(page == 1){
      <div class="basis-gegevens" >
        <div class="gegevens @(isPersoonsGegevensComplete ? "green-background" : "") @(showPersoonsGegevens ? "opened" : "")" @onclick="TogglePersoonsGegevens">
          <p class="title">
            Persoons gegevens
            @if (showPersoonsGegevens)
            {
              <span>&#x25B2;</span>
            }
            else
            {
              <span>&#x25BC;</span>
            }
          </p>
          @if (showPersoonsGegevens){
            <div class="info">
              <p class="informatie-vak">Voornaam: Max</p>
              <p class="informatie-vak">Achternaam: Haijes</p>
              <p class="informatie-vak">Geboortedatum: 12-12-2012</p>
              <p class="informatie-vak">BSN: 111222333</p>
              <a class="informatie-vak passpoort" href="">Paspoort</a>
              <button class="button ok-button" @onclick="HandleOkButtonClickBasisGegevens">✔</button>
              <button class="button no-button" @onclick="HandleNoButtonClickPersoonsGegevens">X</button>
            </div> 
          }
        </div>
        <div class="gegevens @(isBedrijfsGegevensComplete ? "green-background" : "") @(showBedrijfsGegevens ? "opened" : "")" @onclick="ToggleBedrijfsGegevens">
          <p class="title">
            Bedrijfs gegevens
            @if (showBedrijfsGegevens)
            {
              <span>&#x25B2;</span>
            }
            else
            {
              <span>&#x25BC;</span>
            }
          </p>
          @if (showBedrijfsGegevens){
            <div class="info">
              <p class="informatie-vak">Naam: StaffingNow</p>
              <p class="informatie-vak">KVK-nummer: 5684 6846</p>
              <p class="informatie-vak">Adress: Ergens</p>
              <p class="informatie-vak">Oprichtingsdatum: 12-12-1212</p>
              <a class="informatie-vak organogram">organogram</a>
              <button class="button ok-button" @onclick="HandleOkButtonClickBedrijfsGegevens">✔</button>
              <button class="button no-button" @onclick="HandleNoButtonClickBedrijfsGegevens">X</button>
            </div> 
          }
        </div>        
      </div>
    } else if(page == 2){
      <div class="overige-gegevens">
        <div class="gegevens @(isAlleDocumentenComplete ? "green-background" : "") @(showDocumentenInzien ? "opened" : "")" @onclick="ToggleDocumentenInzien">
          <p class="title">
            Documenten
            @if (showDocumentenInzien)
            {
              <span>&#x25B2;</span>
            }
            else
            {
              <span>&#x25BC;</span>
            }
          </p>
          @if (showDocumentenInzien){
            <div class="documenten">
              @foreach(Document document in documents){
                <div class="document-container">
                  <p class="document-vak">@document.Name</p>
                  <button class="button ok-button" @onclick="(e) => HandleOkButtonClickDocumenten(document.Id)">✔</button>
                  <button class="button no-button" @onclick="(e) => HandleNoButtonClickDocumenten(document.Id)">X</button>  
                </div>
                                                    
              }
            </div> 
          }
        </div>
        <div class="gegevens  @((showNotities) ? "opened" : "") " @onclick="ToggleNotities">
          <p class="title">
            Notities
            @if (showNotities)
            {
              <span>&#x25B2;</span>
            }
            else
            {
              <span>&#x25BC;</span>
            }
          </p>
          @if(showNotities){
            <div class="notitie">
              @chosenDossier.LeverancierNotitie

              <br>
              <br>

              Ik wil graag wat aantekeningen delen betreffende onze recente samenwerking. Allereerst wil ik mijn waardering uitspreken voor het professionalisme en de toewijding van uw team gedurende het hele proces.

              Ik ben zeer tevreden met de kwaliteit van de geleverde diensten/producten en de tijdige afhandeling van mijn verzoeken. Het was duidelijk dat uw team mijn behoeften serieus nam en er alles aan deed om aan mijn verwachtingen te voldoen.

              Ik wil graag een speciale vermelding maken van [Naam van de Medewerker], wiens vriendelijke en deskundige ondersteuning mijn ervaring echt verrijkte. Hun toewijding aan klanttevredenheid was onmiskenbaar en werd zeer gewaardeerd.
            </div>
                                         
          }
        </div>
      </div>
    }
  </div>
</div>

@code {

  private List<Dossier> dossiers;
    private bool isPersoonsGegevensComplete;
    private bool isBedrijfsGegevensComplete;
    private bool isDocumentComplete;
    private bool isAlleDocumentenComplete;
    
    private void HandleOkButtonClickBasisGegevens()
    {
        isPersoonsGegevensComplete = true; 
        checkAllGegevensComplete();
    }
    
    private void HandleOkButtonClickBedrijfsGegevens()
    {
        isBedrijfsGegevensComplete = true; 
        checkAllGegevensComplete();
    }

    private void HandleOkButtonClickDocumenten(string documentId)
    {
        foreach (Document document in documents)
        {
            if (document.Id == documentId)
            {
                document.Status = "Goedgekeurd";
                HandleOkAlleDocumenten();
                break; 
            }
        }
    }

    private void HandleOkAlleDocumenten()
    {
        bool allDocumentsComplete = true;

        foreach (Document document in documents)
        {
            if (document.Status != "Goedgekeurd")
            {
                allDocumentsComplete = false;
                break;
            }
        }

        isAlleDocumentenComplete = allDocumentsComplete;
        checkAllGegevensComplete();
    }
    
    private void HandleNoButtonClickPersoonsGegevens()
    {
        isPersoonsGegevensComplete = false; 
        checkAllGegevensComplete();
    }
    
    private void HandleNoButtonClickBedrijfsGegevens()
    {
        isBedrijfsGegevensComplete = false; 
        checkAllGegevensComplete();
    }
    
    private void HandleNoButtonClickDocumenten(string documentId)
    {
        foreach (Document document in documents)
        {
            if (document.Id == documentId)
            {
                document.Status = "Afgekeurd";
                HandleOkAlleDocumenten();
                break; 
            }
        }
    }
    
    private void checkAllGegevensComplete()
    {
        if (chosenDossier == null)
        {
            chosenDossier = dossiers.FirstOrDefault(d => d.KandidaatId == DossierCode);
        }
        else 
        {
            if (!isPersoonsGegevensComplete || !isBedrijfsGegevensComplete || !isAlleDocumentenComplete)
            {
                DossiersService.UpdateDossierStatusAsync(this.chosenDossier.KandidaatId, "In behandeling");
            } 
            else
            {
                DossiersService.UpdateDossierStatusAsync(this.chosenDossier.KandidaatId, "Afgerond");
            }
            StateHasChanged();
        }
    }
    
    protected override async Task OnInitializedAsync()
    {
        dossiers = await DossiersService.GetDossiersAsync();
        chosenDossier = dossiers.FirstOrDefault(d => d.KandidaatId == DossierCode);
        StateHasChanged();
    }


    [Parameter]
    public string DossierCode { get; set; }
    private int page = 1;
            
    private Dossier chosenDossier;
    private List<Document> chosenDocuments = new List<Document>();

    private void navigate(){
        NavigationManager.NavigateTo("/InterneMedewerkerDossierScherm");
    }

    protected override void OnAfterRender(bool firstRender){
        if(firstRender){
            LoginService.setIsAdmin(true);
            LoginService.setLoggedIn(true);
        }
    }


    //Page 1
    private bool showPersoonsGegevens = false;
    private bool showBedrijfsGegevens = false;
    private void TogglePersoonsGegevens()
    {
        showPersoonsGegevens = !showPersoonsGegevens;
    }

    private void ToggleBedrijfsGegevens()
    {
        showBedrijfsGegevens = !showBedrijfsGegevens;
    }

    //Page 2
    private bool showDocumentenInzien = false;
    private bool showNotities = false;
    private void ToggleDocumentenInzien()
    {
        showDocumentenInzien = !showDocumentenInzien;
    }

    private void ToggleNotities()
    {
        showNotities = !showNotities;
    }

    private void SwitchToPage(int pageNumber)
    {
        page = pageNumber;
    }
    
  private List<Document> documents = new List<Document>{
    new Document
    {
      Id = "1",
      Name = "Invoice001",
      UploadType = "Invoice",
      DocumentPath = "/documents/invoice001.pdf",
      Status = "Goedgekeurd",
      CreatedDate = DateTime.Now.AddDays(-10),
      UpdatedDate = DateTime.Now.AddDays(-5),
      CreatedBy = "John Doe"
    },
    new Document
    {
      Id = "2",
      Name = "Contract002",
      UploadType = "Contract",
      DocumentPath = "/documents/contract002.pdf",
      Status = "Wachten op beoordeling",
      CreatedDate = DateTime.Now.AddDays(-15),
      UpdatedDate = DateTime.Now.AddDays(-10),
      CreatedBy = "Jane Smith"
    },
    // new Document
    // {
    //   Id = "3",
    //   Name = "Proposal003",
    //   UploadType = "Proposal",
    //   DocumentPath = "/documents/proposal003.pdf",
    //   Status = "Afgekeurd",
    //   CreatedDate = DateTime.Now.AddDays(-20),
    //   UpdatedDate = DateTime.Now.AddDays(-15),
    //   CreatedBy = "Alice Johnson"
    // },
    // new Document
    // {
    //   Id = "4",
    //   Name = "Delivery004",
    //   UploadType = "Delivery",
    //   DocumentPath = "/documents/delivery004.pdf",
    //   Status = "Nog op te leveren",
    //   CreatedDate = DateTime.Now.AddDays(-25),
    //   UpdatedDate = DateTime.Now.AddDays(-20),
    //   CreatedBy = "Bob Williams"
    // }  

  };
}