@page "/documentbeheer"
@attribute [StreamRendering]
@using Ipsen5_groep01_frontend.Components.Services
@using Ipsen5_groep01_frontend.Models
@inject Ipsen5_groep01_frontend.Components.Services.DocumentenService DocumentenService
@inject LoginService LoginService

<div class="decorative-bar" style="width:100%; height: 70px; background: linear-gradient(0.25turn, #FF6700 0%, #1A222D 53%, #183749 70%, #10ADE5 100%); margin-bottom: 30px;"></div>
<PageTitle>Documentbeheer</PageTitle>

<div class="documenten-container">
    <div class="container">
        <NavLink href="NewDocument" Match="NavLinkMatch.All" class="nav-link">
            <button class="add-button">Nieuw document</button>
        </NavLink>
    </div>
    <div class="header">
        <h1>Documenten</h1>
        <h2>Verplicht</h2>
        <h3>Extensie</h3>
    </div>

    <div class="documenten">
        <ul class="documenten-list">
            @if (documenten != null)
            {
                @foreach (var document in documenten)
{
    <li class="document">
        <div class="document-content">
            <span class="naam">
                <input type="text" @bind="document.UploadType" class="editable-name" />
            </span>
            <span class="document-checkbox">
                <input type="checkbox" @bind="document.Required" />
            </span>
            <span class="extensie">
            <select @bind="document.DocumentType" class="editable-extension">
                <option value="Pdf">pdf</option>
                <option value="Docx">docx</option>
                <option value="Txt">txt</option>
            </select>
        </span>
        </div>
        <span class="prullenbak" @onclick="@(() => VerwijderDocument(document))">🗑️</span>
    </li>
}
            }
            else
            {
                <li>Geen documenten gevonden</li>
            }
        </ul>
    </div>
</div>

@code {
    private List<Document> documenten;

    protected override async Task OnInitializedAsync()
    {
        documenten = await DocumentenService.GetDocumentenAsync();
        StateHasChanged();
    }

    protected override void OnAfterRender(bool firstRender){
        if(firstRender){
            LoginService.setIsAdmin(true);
            LoginService.setLoggedIn(true);
        }
    }

    private async Task VerwijderDocument(Document document)
    {
        documenten.Remove(document);
    }
}
